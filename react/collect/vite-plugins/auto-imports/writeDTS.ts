import { dirname } from 'node:path'
import { existsSync } from 'node:fs'
import { mkdir, writeFile as originWriteFile, readFile } from 'node:fs/promises'

const writeFile = async (filePath: string, content = '') => {
  await mkdir(dirname(filePath), { recursive: true })
  return await originWriteFile(filePath, content, 'utf-8')
}

const generateTemplate = (content: string) => {
  return `/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by auto-import-type
export {}
declare global {
${content}
}\n`
}

export const writeDTS = async (targetPath: string, types: string) => {
  if (!types.length)
    return

  const content = generateTemplate(types)

  if (existsSync(targetPath)) {
    const originContent = await readFile(targetPath, 'utf-8')
    if (originContent !== content) {
      writeFile(targetPath, content)
    }
  }
  else {
    await writeFile(targetPath, content)
  }
}
